a=2;
b=3;
c=4;
d = (a+b) + c! + (b+c); // Evaluating Expression
show d;
=> 37.400002 
e = (a^b) + c! - (b*c); // Evaluating Expression
show e;
=> 20
evalExp (a^b) + c! - (b*c); // Evaluating Expression
=> 2
b = {2!, (3+2), 3^2, 6};
show b;                     // Printing the value of variable
=> 2 5 9 6 
d = {2, 1, 53, 12};
evalExp d<0> + d<1> - (d<3> * d<4>); // Accessing elements at different array indices
=> -630
f = @ (2, 3, 4);                    // Defining Polynomial function
v = evalFun(f 5);                   // Evaluating function at given value
show v;
=> 117 
d = evalDiff(f 3);                  // Evaluating differntial of polynomia function at given value
show d;
=> 27.0000
e = diff(f);                        // returns a differentiated polynomial
v = evalFun(e 3);
show v;
=> 27
a = {1,2,3};                        // array init
a.append(2,34,234);                 // appending values in array
show a;
=> 1.000000 2.000000 3.000000 2.000000 34.000000 234.000000 
a.pop;                              // removing the last element arom array
show a;
=> 1.000000 2.000000 3.000000 2.000000 34.000000 

R
r = root f; // finding root
show r;
=> -0.333333

a = {1,2,3};
typeof a;
=> Vector
b = @ (3,4,5);
typeof b;
=> Polynomial
a.append(3,4,2);
b.append(3,4,2);
Given argument is not an array. (Polynomial is given)

                                                                                                                                                                          
a = {1,2,3};
evalExp evalFun(a 1);        
Given argument is not a Polynomial (Array is given)
