Terminals which are not used

   element
   '@'
   '/'
   '%'
   '['
   ']'


Grammar

    0 $accept: line $end

    1 line: assignment ';'
    2     | exit_command ';'
    3     | evaluateExpression expression ';'
    4     | evaluateFunction '(' identifier expression ')' ';'
    5     | show identifier ';'
    6     | line assignment ';'
    7     | line evaluateExpression expression ';'
    8     | line evaluateFunction '(' identifier expression ')' ';'
    9     | line show identifier ';'
   10     | line exit_command ';'

   11 assignment: identifier '=' DS
   12           | identifier '=' polynomial

   13 polynomial: func '(' arrayelements ')'

   14 DS: '{' arrayelements '}'
   15   | expression

   16 arrayelements: arrayelements expression
   17              | expression

   18 expression: exp

   19 exp: exp '+' exp
   20    | exp '-' exp
   21    | exp '^' exp
   22    | exp '*' exp
   23    | '(' exp ')'
   24    | exp '!'
   25    | exponent '(' exp ')'
   26    | term

   27 term: number
   28     | identifier
   29     | identifier '<' number '>'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 24
'%' (37)
'(' (40) 4 8 13 23 25
')' (41) 4 8 13 23 25
'*' (42) 22
'+' (43) 19
'-' (45) 20
'/' (47)
';' (59) 1 2 3 4 5 6 7 8 9 10
'<' (60) 29
'=' (61) 11 12
'>' (62) 29
'@' (64)
'[' (91)
']' (93)
'^' (94) 21
'{' (123) 14
'}' (125) 14
error (256)
evaluateExpression (258) 3 7
func (259) 13
evaluateFunction (260) 4 8
show (261) 5 9
exit_command (262) 2 10
exponent (263) 25
number (264) 27 29
element (265)
identifier (266) 4 5 8 9 11 12 28 29


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
line (31)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0 6 7 8 9 10
assignment (32)
    on left: 11 12, on right: 1 6
polynomial (33)
    on left: 13, on right: 12
DS (34)
    on left: 14 15, on right: 11
arrayelements (35)
    on left: 16 17, on right: 13 14 16
expression (36)
    on left: 18, on right: 3 4 7 8 15 16 17
exp (37)
    on left: 19 20 21 22 23 24 25 26, on right: 18 19 20 21 22 23 24
    25
term (38)
    on left: 27 28 29, on right: 26


state 0

    0 $accept: . line $end

    evaluateExpression  shift, and go to state 1
    evaluateFunction    shift, and go to state 2
    show                shift, and go to state 3
    exit_command        shift, and go to state 4
    identifier          shift, and go to state 5

    line        go to state 6
    assignment  go to state 7


state 1

    3 line: evaluateExpression . expression ';'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 12
    exp         go to state 13
    term        go to state 14


state 2

    4 line: evaluateFunction . '(' identifier expression ')' ';'

    '('  shift, and go to state 15


state 3

    5 line: show . identifier ';'

    identifier  shift, and go to state 16


state 4

    2 line: exit_command . ';'

    ';'  shift, and go to state 17


state 5

   11 assignment: identifier . '=' DS
   12           | identifier . '=' polynomial

    '='  shift, and go to state 18


state 6

    0 $accept: line . $end
    6 line: line . assignment ';'
    7     | line . evaluateExpression expression ';'
    8     | line . evaluateFunction '(' identifier expression ')' ';'
    9     | line . show identifier ';'
   10     | line . exit_command ';'

    $end                shift, and go to state 19
    evaluateExpression  shift, and go to state 20
    evaluateFunction    shift, and go to state 21
    show                shift, and go to state 22
    exit_command        shift, and go to state 23
    identifier          shift, and go to state 5

    assignment  go to state 24


state 7

    1 line: assignment . ';'

    ';'  shift, and go to state 25


state 8

   25 exp: exponent . '(' exp ')'

    '('  shift, and go to state 26


state 9

   27 term: number .

    $default  reduce using rule 27 (term)


state 10

   28 term: identifier .
   29     | identifier . '<' number '>'

    '<'  shift, and go to state 27

    $default  reduce using rule 28 (term)


state 11

   23 exp: '(' . exp ')'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 28
    term  go to state 14


state 12

    3 line: evaluateExpression expression . ';'

    ';'  shift, and go to state 29


state 13

   18 expression: exp .
   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '^' exp
   22    | exp . '*' exp
   24    | exp . '!'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '^'  shift, and go to state 32
    '*'  shift, and go to state 33
    '!'  shift, and go to state 34

    $default  reduce using rule 18 (expression)


state 14

   26 exp: term .

    $default  reduce using rule 26 (exp)


state 15

    4 line: evaluateFunction '(' . identifier expression ')' ';'

    identifier  shift, and go to state 35


state 16

    5 line: show identifier . ';'

    ';'  shift, and go to state 36


state 17

    2 line: exit_command ';' .

    $default  reduce using rule 2 (line)


state 18

   11 assignment: identifier '=' . DS
   12           | identifier '=' . polynomial

    func        shift, and go to state 37
    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11
    '{'         shift, and go to state 38

    polynomial  go to state 39
    DS          go to state 40
    expression  go to state 41
    exp         go to state 13
    term        go to state 14


state 19

    0 $accept: line $end .

    $default  accept


state 20

    7 line: line evaluateExpression . expression ';'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 42
    exp         go to state 13
    term        go to state 14


state 21

    8 line: line evaluateFunction . '(' identifier expression ')' ';'

    '('  shift, and go to state 43


state 22

    9 line: line show . identifier ';'

    identifier  shift, and go to state 44


state 23

   10 line: line exit_command . ';'

    ';'  shift, and go to state 45


state 24

    6 line: line assignment . ';'

    ';'  shift, and go to state 46


state 25

    1 line: assignment ';' .

    $default  reduce using rule 1 (line)


state 26

   25 exp: exponent '(' . exp ')'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 47
    term  go to state 14


state 27

   29 term: identifier '<' . number '>'

    number  shift, and go to state 48


state 28

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '^' exp
   22    | exp . '*' exp
   23    | '(' exp . ')'
   24    | exp . '!'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '^'  shift, and go to state 32
    '*'  shift, and go to state 33
    ')'  shift, and go to state 49
    '!'  shift, and go to state 34


state 29

    3 line: evaluateExpression expression ';' .

    $default  reduce using rule 3 (line)


state 30

   19 exp: exp '+' . exp

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 50
    term  go to state 14


state 31

   20 exp: exp '-' . exp

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 51
    term  go to state 14


state 32

   21 exp: exp '^' . exp

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 52
    term  go to state 14


state 33

   22 exp: exp '*' . exp

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    exp   go to state 53
    term  go to state 14


state 34

   24 exp: exp '!' .

    $default  reduce using rule 24 (exp)


state 35

    4 line: evaluateFunction '(' identifier . expression ')' ';'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 54
    exp         go to state 13
    term        go to state 14


state 36

    5 line: show identifier ';' .

    $default  reduce using rule 5 (line)


state 37

   13 polynomial: func . '(' arrayelements ')'

    '('  shift, and go to state 55


state 38

   14 DS: '{' . arrayelements '}'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    arrayelements  go to state 56
    expression     go to state 57
    exp            go to state 13
    term           go to state 14


state 39

   12 assignment: identifier '=' polynomial .

    $default  reduce using rule 12 (assignment)


state 40

   11 assignment: identifier '=' DS .

    $default  reduce using rule 11 (assignment)


state 41

   15 DS: expression .

    $default  reduce using rule 15 (DS)


state 42

    7 line: line evaluateExpression expression . ';'

    ';'  shift, and go to state 58


state 43

    8 line: line evaluateFunction '(' . identifier expression ')' ';'

    identifier  shift, and go to state 59


state 44

    9 line: line show identifier . ';'

    ';'  shift, and go to state 60


state 45

   10 line: line exit_command ';' .

    $default  reduce using rule 10 (line)


state 46

    6 line: line assignment ';' .

    $default  reduce using rule 6 (line)


state 47

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '^' exp
   22    | exp . '*' exp
   24    | exp . '!'
   25    | exponent '(' exp . ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '^'  shift, and go to state 32
    '*'  shift, and go to state 33
    ')'  shift, and go to state 61
    '!'  shift, and go to state 34


state 48

   29 term: identifier '<' number . '>'

    '>'  shift, and go to state 62


state 49

   23 exp: '(' exp ')' .

    $default  reduce using rule 23 (exp)


state 50

   19 exp: exp . '+' exp
   19    | exp '+' exp .
   20    | exp . '-' exp
   21    | exp . '^' exp
   22    | exp . '*' exp
   24    | exp . '!'

    '*'  shift, and go to state 33
    '!'  shift, and go to state 34

    $default  reduce using rule 19 (exp)


state 51

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   20    | exp '-' exp .
   21    | exp . '^' exp
   22    | exp . '*' exp
   24    | exp . '!'

    '*'  shift, and go to state 33
    '!'  shift, and go to state 34

    $default  reduce using rule 20 (exp)


state 52

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '^' exp
   21    | exp '^' exp .
   22    | exp . '*' exp
   24    | exp . '!'

    '*'  shift, and go to state 33
    '!'  shift, and go to state 34

    $default  reduce using rule 21 (exp)


state 53

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '^' exp
   22    | exp . '*' exp
   22    | exp '*' exp .
   24    | exp . '!'

    '!'  shift, and go to state 34

    $default  reduce using rule 22 (exp)


state 54

    4 line: evaluateFunction '(' identifier expression . ')' ';'

    ')'  shift, and go to state 63


state 55

   13 polynomial: func '(' . arrayelements ')'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    arrayelements  go to state 64
    expression     go to state 57
    exp            go to state 13
    term           go to state 14


state 56

   14 DS: '{' arrayelements . '}'
   16 arrayelements: arrayelements . expression

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11
    '}'         shift, and go to state 65

    expression  go to state 66
    exp         go to state 13
    term        go to state 14


state 57

   17 arrayelements: expression .

    $default  reduce using rule 17 (arrayelements)


state 58

    7 line: line evaluateExpression expression ';' .

    $default  reduce using rule 7 (line)


state 59

    8 line: line evaluateFunction '(' identifier . expression ')' ';'

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 67
    exp         go to state 13
    term        go to state 14


state 60

    9 line: line show identifier ';' .

    $default  reduce using rule 9 (line)


state 61

   25 exp: exponent '(' exp ')' .

    $default  reduce using rule 25 (exp)


state 62

   29 term: identifier '<' number '>' .

    $default  reduce using rule 29 (term)


state 63

    4 line: evaluateFunction '(' identifier expression ')' . ';'

    ';'  shift, and go to state 68


state 64

   13 polynomial: func '(' arrayelements . ')'
   16 arrayelements: arrayelements . expression

    exponent    shift, and go to state 8
    number      shift, and go to state 9
    identifier  shift, and go to state 10
    '('         shift, and go to state 11
    ')'         shift, and go to state 69

    expression  go to state 66
    exp         go to state 13
    term        go to state 14


state 65

   14 DS: '{' arrayelements '}' .

    $default  reduce using rule 14 (DS)


state 66

   16 arrayelements: arrayelements expression .

    $default  reduce using rule 16 (arrayelements)


state 67

    8 line: line evaluateFunction '(' identifier expression . ')' ';'

    ')'  shift, and go to state 70


state 68

    4 line: evaluateFunction '(' identifier expression ')' ';' .

    $default  reduce using rule 4 (line)


state 69

   13 polynomial: func '(' arrayelements ')' .

    $default  reduce using rule 13 (polynomial)


state 70

    8 line: line evaluateFunction '(' identifier expression ')' . ';'

    ';'  shift, and go to state 71


state 71

    8 line: line evaluateFunction '(' identifier expression ')' ';' .

    $default  reduce using rule 8 (line)
